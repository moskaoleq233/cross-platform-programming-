using System;
using System.Collections.Generic;
using System.Text;

namespace Лаба_3
{
    class Program
    {

        static void Main(string[] args)
        {
            Military military = new Military("Antonov",120M,9500,700,"gas bombs");
            Passenger passenger = new Passenger("Boeing",747M,4500,820,452);
            Auto auto = new Auto("Buhanka",1000,"red","diesel",6);
            Trains trains = new Trains("Huindai",12M,"grey","electric",9);

            Console.WriteLine(military.ToString());
            Console.WriteLine(passenger.ToString());
            Console.WriteLine(auto.ToString());
            Console.WriteLine(trains.ToString());

            Console.WriteLine();
            Console.ReadKey();
            
        }

    }

public abstract class Product
    {
        protected string name;
        protected decimal price;

        public Product()
        {
            this.name = "";
            this.price = 0;
        }
        public Product(string name, decimal price)
        {
            Name = name;
            Price = price;
        }
        public string Name
        {
            get { return name; }
            set { name = value; }
        }

        public decimal Price
        {
            get { return price; }
            set { price = value; }
        }

        public override string ToString()
        {
            return $"{base.ToString()}, Name:{name}, Price:{price}";
        }
    }
    public class Aircraft : Product
    {
        protected int runwayLenght;
        protected int flightAltitude;

        public Aircraft()
        {

            this.flightAltitude = 0;
            this.runwayLenght = 0;
        }
        public Aircraft(string name, decimal price, int flightAltitude, int runwayLenght) : base(name, price)
        {
            this.flightAltitude = flightAltitude;
            this.runwayLenght = runwayLenght;

        }


        public int FlightAltitude
        {
            get { return flightAltitude; }
            set
            {
                flightAltitude = value;
            }
        }
        public int RunwayLenght
        {
            get { return runwayLenght; }
            set
            {
                runwayLenght = value;
            }
        }

        public override string ToString()
        {
            return $"{base.ToString()}, flightAltitude:{flightAltitude}, runwayLenght:{runwayLenght}";

        }
    }

    public class GroundVehicles : Product
    {
        protected string color;
        protected string powerResource;

        public GroundVehicles()
        {
            this.color = "";
            this.powerResource = "";
        }
        public GroundVehicles(string name, decimal price, string color, string powerResource) : base(name, price)
        {
            this.color = color;
            this.powerResource = powerResource;
        }


        public string Color
        {
            get { return color; }
            set
            {
                color = value;
            }
        }
        public string PowerResource
        {
            get { return powerResource; }
            set
            {
                powerResource = value;
            }
        }

        public override string ToString()
        {
            return $"{base.ToString()}, color:{color}, powerResource:{powerResource}";

        }
    }

    public class Auto : GroundVehicles
    {
        protected int countOfDoors;

        public Auto()
        {
            this.countOfDoors = 0;

        }
        public Auto(string name, decimal price, string color, string powerResource, int countOfDoors) : base(name, price, color, powerResource)
        {
            this.countOfDoors = countOfDoors;
        }


        public int CountOfDoors
        {
            get { return countOfDoors; }
            set
            {
                countOfDoors = value;
            }
        }

        public override string ToString()
        {
            return $"{base.ToString()}, countOfDoors:{countOfDoors}";
        }
    }

    public class Trains : GroundVehicles
    {
        protected int countOfCarriage;

        public Trains()
        {
            this.countOfCarriage = 0;
        }
        public Trains(string name, decimal price, string color, string powerResource, int countOfCarriage) : base(name, price, color, powerResource)
        {
            this.countOfCarriage = countOfCarriage;
        }
        public int CountOfCarriage
        {
            get { return countOfCarriage; }
            set
            {
                countOfCarriage = value;
            }
        }

        public override string ToString()
        {
            return $"{base.ToString()}, countOfCarriage:{countOfCarriage}";

        }
    }

    public class Passenger : Aircraft
    {
        protected int countOfPassengers;
        public Passenger()
        {
            this.countOfPassengers = 0;
        }
        public Passenger(string name, decimal price, int flightAltitude, int runwayLenght, int countOfPassengers) : base(name, price, flightAltitude, runwayLenght)
        {
            this.countOfPassengers = countOfPassengers;
        }

        public int CountOfPassengers
        {
            get { return countOfPassengers; }
            set
            {
                countOfPassengers = value;
            }
        }

        public override string ToString()
        {
            return $"{base.ToString()}, countOfPassengers:{countOfPassengers}";
        }
    }

    public class Military : Aircraft
    {
        protected string arming;

        public Military()
        {
            this.arming = "";
        }
        public Military(string name, decimal price, int flightAltitude, int runwayLenght, string arming) : base(name, price, flightAltitude, runwayLenght)
            this.arming = arming;
        }
        public string Arming
        {
            get { return arming; }
            set
            {
                arming = value;
            }
        }
        public override string ToString()
        {
            return $"{base.ToString()}, arming:{arming}";
        }
    }
}

   

